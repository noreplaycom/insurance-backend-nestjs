# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountAvgAggregate {
  id: Float
  currentBalance: Float
}

type AccountCountAggregate {
  id: Int!
  currentBalance: Int!
  currentBalanceLastUpdate: Int!
  participantId: Int!
  _all: Int!
}

type AccountCount {
  transactions: Int!
  programParticipation: Int!
}

type AccountMaxAggregate {
  id: Int
  currentBalance: Float
  currentBalanceLastUpdate: DateTime
  participantId: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AccountMinAggregate {
  id: Int
  currentBalance: Float
  currentBalanceLastUpdate: DateTime
  participantId: String
}

type AccountSumAggregate {
  id: Int
  currentBalance: Float
}

type Account {
  id: Int!

  """Sisa Plafon:	Sisa Plafon Santunan Harian Rawat Inap"""
  currentBalance: Float!
  currentBalanceLastUpdate: DateTime
  participantId: String!
  participant: Participant!
  transactions: [Transaction!]
  programParticipation: [ProgramParticipation!]
  _count: AccountCount!
}

type AddressAvgAggregate {
  id: Float
  cityId: Float
}

type AddressCountAggregate {
  id: Int!
  address: Int!
  cityId: Int!
  postalCode: Int!
  _all: Int!
}

type AddressCount {
  ContactInfo: Int!
}

type AddressMaxAggregate {
  id: Int
  address: String
  cityId: Int
  postalCode: String
}

type AddressMinAggregate {
  id: Int
  address: String
  cityId: Int
  postalCode: String
}

type AddressSumAggregate {
  id: Int
  cityId: Int
}

type Address {
  id: Int!

  """Alamat"""
  address: String!

  """Kota"""
  cityId: Int!

  """Kode Pos"""
  postalCode: String!

  """Kota"""
  city: City!
  ContactInfo: [ContactInfo!]
  _count: AddressCount!
}

type AnnouncementAvgAggregate {
  id: Float
}

type AnnouncementCountAggregate {
  id: Int!
  title: Int!
  content: Int!
  imageUrl: Int!
  createdAt: Int!
  updatedAt: Int!
  createdById: Int!
  _all: Int!
}

type AnnouncementMaxAggregate {
  id: Int
  title: String
  content: String
  imageUrl: String
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type AnnouncementMinAggregate {
  id: Int
  title: String
  content: String
  imageUrl: String
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type AnnouncementSumAggregate {
  id: Int
}

type Announcement {
  id: Int!
  title: String!
  content: String!
  imageUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
  createdById: String!
  createdBy: User!
}

type BankAccountAvgAggregate {
  id: Float
  accountNumber: Float
}

type BankAccountCountAggregate {
  id: Int!
  accountNumber: Int!
  accountName: Int!
  participantId: Int!
  _all: Int!
}

type BankAccountMaxAggregate {
  id: Int
  accountNumber: Float
  accountName: String
  participantId: String
}

type BankAccountMinAggregate {
  id: Int
  accountNumber: Float
  accountName: String
  participantId: String
}

type BankAccountSumAggregate {
  id: Int
  accountNumber: Float
}

type BankAccount {
  id: Int!

  """No. Rekening	Nomer Rekening Penerimaan Manfaat Pensiun"""
  accountNumber: Float!

  """Rekening a/n.	Nama pada rekening bank"""
  accountName: String!
  participantId: String!
  participant: Participant!
}

type BranchAvgAggregate {
  id: Float
}

type BranchCountAggregate {
  id: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type BranchCount {
  employment: Int!
  claimFinancial: Int!
}

type BranchMaxAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type BranchMinAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type BranchSumAggregate {
  id: Int
}

type Branch {
  id: Int!

  """Nama Cabang"""
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  employment: [Employment!]
  claimFinancial: [ClaimFinancial!]
  _count: BranchCount!
}

type CityAvgAggregate {
  id: Float
}

type CityCountAggregate {
  id: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type CityCount {
  address: Int!
}

type CityMaxAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type CityMinAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type CitySumAggregate {
  id: Int
}

type City {
  id: Int!

  """Nama Kota"""
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  address: [Address!]
  _count: CityCount!
}

type ClaimAvgAggregate {
  companyId: Float
  claimFinancialId: Float
  claimProcessId: Float
  diseaseId: Float
  clinicId: Float
  claimTypeId: Float
}

type ClaimCountAggregate {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  channel: Int!
  admedicaStatus: Int!
  companyId: Int!
  participantId: Int!
  claimFinancialId: Int!
  claimProcessId: Int!
  diseaseId: Int!
  clinicId: Int!
  inputedById: Int!
  claimTypeId: Int!
  _all: Int!
}

type ClaimCount {
  tags: Int!
  claimStatuses: Int!
}

type ClaimMaxAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  channel: ClaimChannel
  admedicaStatus: AdmedicaStatus
  companyId: Int
  participantId: String
  claimFinancialId: Int
  claimProcessId: Int
  diseaseId: Int
  clinicId: Int
  inputedById: String
  claimTypeId: Int
}

enum ClaimChannel {
  REGULER
  WA
  EMAIL
}

enum AdmedicaStatus {
  NON_ADMEDICA
  ADMEDICA
}

type ClaimMinAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  channel: ClaimChannel
  admedicaStatus: AdmedicaStatus
  companyId: Int
  participantId: String
  claimFinancialId: Int
  claimProcessId: Int
  diseaseId: Int
  clinicId: Int
  inputedById: String
  claimTypeId: Int
}

type ClaimSumAggregate {
  companyId: Int
  claimFinancialId: Int
  claimProcessId: Int
  diseaseId: Int
  clinicId: Int
  claimTypeId: Int
}

type Claim {
  """
  Nok:	Nomer Register Klaim
  Nomor Sm	nomer register Surat masuk (Klaim melalui WA/Reguler/Exception/Email)
  """
  id: String!

  """Tklaim:	Tanggal Klaim"""
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime

  """Metode Klaim:	WA,E-mail,Reguler, Telepon"""
  channel: ClaimChannel!

  """Stat. Admedika:	Status Admedika"""
  admedicaStatus: AdmedicaStatus!

  """Prsh:	Perusahaan"""
  companyId: Int!
  participantId: String!
  claimFinancialId: Int!
  claimProcessId: Int!
  diseaseId: Int
  clinicId: Int!
  inputedById: String
  claimTypeId: Int!

  """Prsh:	Perusahaan"""
  company: Company!
  participant: Participant!
  claimFinancials: ClaimFinancial!
  claimProcesses: ClaimProcess!
  disease: Disease
  clinics: Clinic!
  inputedBy: User
  claimTypes: ClaimType!
  tags: [Tag!]
  claimStatuses: [ClaimStatus!]
  _count: ClaimCount!
}

type ClaimFinancialAvgAggregate {
  id: Float
  requestedAmount: Float
  paidAmount: Float
  rejectedAmount: Float
  branchId: Float
  claimStatusId: Float
}

type ClaimFinancialCountAggregate {
  id: Int!
  requestedAmount: Int!
  paidAmount: Int!
  rejectedAmount: Int!
  transactionProcessDate: Int!
  transferDate: Int!
  claimId: Int!
  branchId: Int!
  claimStatusId: Int!
  _all: Int!
}

type ClaimFinancialMaxAggregate {
  id: Int
  requestedAmount: Float
  paidAmount: Float
  rejectedAmount: Float
  transactionProcessDate: DateTime
  transferDate: DateTime
  claimId: String
  branchId: Int
  claimStatusId: Int
}

type ClaimFinancialMinAggregate {
  id: Int
  requestedAmount: Float
  paidAmount: Float
  rejectedAmount: Float
  transactionProcessDate: DateTime
  transferDate: DateTime
  claimId: String
  branchId: Int
  claimStatusId: Int
}

type ClaimFinancialSumAggregate {
  id: Int
  requestedAmount: Float
  paidAmount: Float
  rejectedAmount: Float
  branchId: Int
  claimStatusId: Int
}

type ClaimFinancial {
  id: Int!

  """Aju:	Jumlah nominal klaim diajukan"""
  requestedAmount: Float!

  """Bayar:	Jumlah nominal klaim dibayar"""
  paidAmount: Float

  """Tolak:	Jumlah Nominal Klaim ditolak"""
  rejectedAmount: Float

  """TProses Transaksi:	Tanggal Proses Transaksi"""
  transactionProcessDate: DateTime

  """Transfer:	Tanggal Transfer"""
  transferDate: DateTime
  claimId: String!

  """Cabang: Cabang Pembayar Pensiun"""
  branchId: Int!
  claimStatusId: Int!

  """Cabang: Cabang Pembayar Pensiun"""
  branchPayee: Branch!
  claim: Claim
  claimStatus: ClaimStatus!
}

type ClaimProcessAvgAggregate {
  id: Float
}

type ClaimProcessCountAggregate {
  id: Int!
  startTreatment: Int!
  endTreatment: Int!
  expeditionDate: Int!
  reclaim: Int!
  processDate: Int!
  submissionNote: Int!
  description: Int!
  additionalNote: Int!
  claimId: Int!
  _all: Int!
}

type ClaimProcessCount {
  documents: Int!
}

type ClaimProcessMaxAggregate {
  id: Int
  startTreatment: DateTime
  endTreatment: DateTime
  expeditionDate: DateTime
  reclaim: String
  processDate: DateTime
  submissionNote: String
  description: String
  additionalNote: String
  claimId: String
}

type ClaimProcessMinAggregate {
  id: Int
  startTreatment: DateTime
  endTreatment: DateTime
  expeditionDate: DateTime
  reclaim: String
  processDate: DateTime
  submissionNote: String
  description: String
  additionalNote: String
  claimId: String
}

type ClaimProcessSumAggregate {
  id: Int
}

type ClaimProcess {
  id: Int!

  """Tmulairawat	Tanggal mulai Rawat"""
  startTreatment: DateTime

  """Takhirrawat	Tanggal akhir rawat"""
  endTreatment: DateTime

  """Tekspedisi	Tanggal ekspedisi"""
  expeditionDate: DateTime

  """Reklaim:	Keterangan untuk klaim ulang"""
  reclaim: String

  """TProses Pengajuan:	Tanggal Proses pengajuan"""
  processDate: DateTime

  """Ket.Pengajuan:	Keterangan konfirmasi"""
  submissionNote: String!

  """Keterangan:	isi keterangan """
  description: String!

  """Ket.Tambahan	keterangan tambahan"""
  additionalNote: String!
  claimId: String!
  claim: Claim

  """Kwitansi, data, dll: Bukti Pembayaran/Invoice Rumah Sakit oleh Peserta"""
  documents: [Document!]
  _count: ClaimProcessCount!
}

type ClaimStatusAvgAggregate {
  id: Float
}

type ClaimStatusCountAggregate {
  id: Int!
  description: Int!
  rejectionReason: Int!
  createdAt: Int!
  status: Int!
  createById: Int!
  claimId: Int!
  rejectionLetterId: Int!
  guaranteeLetterId: Int!
  transactionLetterId: Int!
  bookKeepingOrderId: Int!
  _all: Int!
}

type ClaimStatusMaxAggregate {
  id: Int
  description: String
  rejectionReason: String
  createdAt: DateTime
  status: ClaimStatusType
  createById: String
  claimId: String
  rejectionLetterId: String
  guaranteeLetterId: String
  transactionLetterId: String
  bookKeepingOrderId: String
}

enum ClaimStatusType {
  DOCUMENT
  PENDING
  APPROVED
  REJECTED
  RELEASE
  PAID
  COMPLETED
  CANCELLED
  REOPEN
}

type ClaimStatusMinAggregate {
  id: Int
  description: String
  rejectionReason: String
  createdAt: DateTime
  status: ClaimStatusType
  createById: String
  claimId: String
  rejectionLetterId: String
  guaranteeLetterId: String
  transactionLetterId: String
  bookKeepingOrderId: String
}

type ClaimStatusSumAggregate {
  id: Int
}

type ClaimStatus {
  id: Int!
  description: String
  rejectionReason: String
  createdAt: DateTime!
  status: ClaimStatusType!
  createById: String!
  claimId: String!

  """
  Nomor surat tolak
  Tanggal surat tolak
  """
  rejectionLetterId: String

  """No SurJam:	Nomer Surat jaminan"""
  guaranteeLetterId: String
  transactionLetterId: String
  bookKeepingOrderId: String
  createBy: User!
  claim: Claim!

  """
  Nomor surat tolak
  Tanggal surat tolak
  """
  rejectionLetter: Document

  """No SurJam:	Nomer Surat jaminan"""
  guaranteeLetter: Document
  transactionLetter: Document
  bookKeepingOrder: Document
  claimFinancial: ClaimFinancial
}

type ClaimTypeAvgAggregate {
  id: Float
  programId: Float
  claimId: Float
}

type ClaimTypeCountAggregate {
  id: Int!
  jenis: Int!
  jenisRI: Int!
  plan: Int!
  programId: Int!
  claimId: Int!
  _all: Int!
}

type ClaimTypeMaxAggregate {
  id: Int
  jenis: String
  jenisRI: String
  plan: String
  programId: Int
  claimId: Int
}

type ClaimTypeMinAggregate {
  id: Int
  jenis: String
  jenisRI: String
  plan: String
  programId: Int
  claimId: Int
}

type ClaimTypeSumAggregate {
  id: Int
  programId: Int
  claimId: Int
}

type ClaimType {
  id: Int!

  """Jenis:	Jenis Produk Bantuan"""
  jenis: String!

  """Jenis RI:	Hospital Cash Plan"""
  jenisRI: String!

  """Plan	Plan = jenis Rawat inap atau disingkat RI"""
  plan: String!
  programId: Int!
  claimId: Int!
  program: Program!
  claims: Claim
}

type ClinicAvgAggregate {
  id: Float
}

type ClinicCountAggregate {
  id: Int!
  code: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type ClinicCount {
  claims: Int!
}

type ClinicMaxAggregate {
  id: Int
  code: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ClinicMinAggregate {
  id: Int
  code: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ClinicSumAggregate {
  id: Int
}

type Clinic {
  id: Int!
  code: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  claims: [Claim!]
  _count: ClinicCount!
}

type CompanyAvgAggregate {
  id: Float
}

type CompanyCountAggregate {
  id: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type CompanyCount {
  claims: Int!
}

type CompanyMaxAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type CompanyMinAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type CompanySumAggregate {
  id: Int
}

type Company {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  claims: [Claim!]
  _count: CompanyCount!
}

type ContactInfoAvgAggregate {
  id: Float
  addressId: Float
}

type ContactInfoCountAggregate {
  id: Int!
  telp: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  participantId: Int!
  addressId: Int!
  _all: Int!
}

type ContactInfoMaxAggregate {
  id: Int
  telp: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  participantId: String
  addressId: Int
}

type ContactInfoMinAggregate {
  id: Int
  telp: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  participantId: String
  addressId: Int
}

type ContactInfoSumAggregate {
  id: Int
  addressId: Int
}

type ContactInfo {
  id: Int!
  telp: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  participantId: String!
  addressId: Int!
  participant: Participant!
  address: Address!
}

type DiseaseAvgAggregate {
  id: Float
}

type DiseaseCountAggregate {
  id: Int!
  code: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type DiseaseCount {
  claims: Int!
}

type DiseaseMaxAggregate {
  id: Int
  code: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type DiseaseMinAggregate {
  id: Int
  code: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type DiseaseSumAggregate {
  id: Int
}

type Disease {
  id: Int!

  """KodePenyakit: kode jenis penyakit"""
  code: String!

  """NamaPenyakit: nama penyakit"""
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  claims: [Claim!]
  _count: DiseaseCount!
}

type DocumentAvgAggregate {
  size: Float
  printCount: Float
  claimProcessId: Float
}

type DocumentCountAggregate {
  id: Int!
  name: Int!
  path: Int!
  size: Int!
  printCount: Int!
  createdAt: Int!
  updatedAt: Int!
  source: Int!
  type: Int!
  claimProcessId: Int!
  _all: Int!
}

type DocumentMaxAggregate {
  id: String
  name: String
  path: String
  size: Int
  printCount: Int
  createdAt: DateTime
  updatedAt: DateTime
  source: DocumentSource
  type: DocumentType
  claimProcessId: Int
}

enum DocumentSource {
  UPLOADED
  GENERATED
}

enum DocumentType {
  INVOICE
  CLAIM_FORM
  REJECTION_LETTER
  GUARANTEE_LETTER
  RECAP
  EXPEDITION
  TRANSFER
}

type DocumentMinAggregate {
  id: String
  name: String
  path: String
  size: Int
  printCount: Int
  createdAt: DateTime
  updatedAt: DateTime
  source: DocumentSource
  type: DocumentType
  claimProcessId: Int
}

type DocumentSumAggregate {
  size: Int
  printCount: Int
  claimProcessId: Int
}

type Document {
  """Nodok:	Nomer Dokumen"""
  id: String!

  """Nama Dokumen"""
  name: String!

  """Path:	Path file dokumen"""
  path: String!

  """Ukuran:	Ukuran dokumen"""
  size: Int!

  """Jumlah Cetak:	Jumlah cetak dokumen"""
  printCount: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  source: DocumentSource!
  type: DocumentType!
  claimProcessId: Int
  rejectionLetterOf: ClaimStatus
  guaranteeLetterOf: ClaimStatus

  """Surat transaksi"""
  transactionLetterOf: ClaimStatus

  """Perintah Pembukuan"""
  bookKeepingOrderOf: ClaimStatus
  claimProcess: ClaimProcess
}

type EmploymentAvgAggregate {
  id: Float
  branchId: Float
  groupId: Float
  regionId: Float
}

type EmploymentCountAggregate {
  id: Int!
  employmentPosition: Int!
  participantId: Int!
  branchId: Int!
  groupId: Int!
  regionId: Int!
  _all: Int!
}

type EmploymentMaxAggregate {
  id: Int
  employmentPosition: Position
  participantId: String
  branchId: Int
  groupId: Int
  regionId: Int
}

enum Position {
  AMGR
  AVP
  PGD
  MGR
  SASST
  VP
  SAVP
  SMGR
  SAMGR
  ASST
}

type EmploymentMinAggregate {
  id: Int
  employmentPosition: Position
  participantId: String
  branchId: Int
  groupId: Int
  regionId: Int
}

type EmploymentSumAggregate {
  id: Int
  branchId: Int
  groupId: Int
  regionId: Int
}

type Employment {
  id: Int!

  """Jenjang Jabatan terakhir"""
  employmentPosition: Position!
  participantId: String!
  branchId: Int!
  groupId: Int!
  regionId: Int!
  participant: Participant!
  branch: Branch!
  group: Group
  region: Region
}

type GroupAvgAggregate {
  id: Float
}

type GroupCountAggregate {
  id: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type GroupCount {
  employment: Int!
}

type GroupMaxAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type GroupMinAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type GroupSumAggregate {
  id: Int
}

type Group {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  employment: [Employment!]
  _count: GroupCount!
}

type NotificationAvgAggregate {
  id: Float
}

type NotificationCountAggregate {
  id: Int!
  title: Int!
  subtitle: Int!
  content: Int!
  createdAt: Int!
  isRead: Int!
  isCleared: Int!
  deepLink: Int!
  fcmToken: Int!
  userId: Int!
  _all: Int!
}

type NotificationMaxAggregate {
  id: Int
  title: String
  subtitle: String
  content: String
  createdAt: DateTime
  isRead: Boolean
  isCleared: Boolean
  deepLink: String
  fcmToken: String
  userId: String
}

type NotificationMinAggregate {
  id: Int
  title: String
  subtitle: String
  content: String
  createdAt: DateTime
  isRead: Boolean
  isCleared: Boolean
  deepLink: String
  fcmToken: String
  userId: String
}

type NotificationSumAggregate {
  id: Int
}

type Notification {
  id: Int!
  title: String!
  subtitle: String!
  content: String!
  createdAt: DateTime!
  isRead: Boolean!
  isCleared: Boolean!
  deepLink: String
  fcmToken: String
  userId: String!
  user: User!
}

type ParticipantAvgAggregate {
  bankAccountId: Float
}

type ParticipantCountAggregate {
  gender: Int!
  birthDate: Int!
  isActive: Int!
  status: Int!
  userId: Int!
  relationId: Int!
  bankAccountId: Int!
  _all: Int!
}

type ParticipantCount {
  claims: Int!
  employments: Int!
  contactInfos: Int!
  programParticipations: Int!
  balances: Int!
  Participant: Int!
}

type ParticipantMaxAggregate {
  gender: Gender
  birthDate: DateTime
  isActive: Boolean
  status: ParticipantStatus
  userId: String
  relationId: String
  bankAccountId: Int
}

enum Gender {
  UNKNOWN
  MALE
  FEMALE
}

enum ParticipantStatus {
  PENSIUNAN
  PASANGAN
  YATIM
  JANDADUDA6BULAN
}

type ParticipantMinAggregate {
  gender: Gender
  birthDate: DateTime
  isActive: Boolean
  status: ParticipantStatus
  userId: String
  relationId: String
  bankAccountId: Int
}

type ParticipantSumAggregate {
  bankAccountId: Int
}

type Participant {
  """Jenis Kelamin"""
  gender: Gender!

  """Tanggal Lahir"""
  birthDate: DateTime!

  """Aktif/Non Aktif:	Status Kepesertaan Aktif/non aktif"""
  isActive: Boolean!

  """Pensiunan,Pasangan, Yatim, Janda/duda 6 bulan"""
  status: ParticipantStatus!
  userId: String!
  relationId: String
  bankAccountId: Int!
  user: User!

  """Anggota keluarga dari"""
  relation: Participant
  bankAccount: BankAccount
  claims: [Claim!]
  employments: [Employment!]
  contactInfos: [ContactInfo!]
  programParticipations: [ProgramParticipation!]
  balances: [Account!]

  """Anggota keluarga dari"""
  Participant: [Participant!]
  _count: ParticipantCount!
}

type ProgramAvgAggregate {
  id: Float
  allowanceCeiling: Float
  maxAllowance: Float
}

type ProgramCountAggregate {
  id: Int!
  plan: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  allowanceCeiling: Int!
  class: Int!
  maxAllowance: Int!
  _all: Int!
}

type ProgramCount {
  programParticipations: Int!
  claimType: Int!
}

type ProgramMaxAggregate {
  id: Int
  plan: ApplicationType
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  allowanceCeiling: Float
  class: Class
  maxAllowance: Float
}

enum ApplicationType {
  SANTUNAN_HARIAN_RAWAT_INAP
  BANTUAN_BIAYA_CUCI_DARAH
  BANTUAN_KURSI_RODA
  BANTUAN_WALKER
  BANTUAN_IGD_UGD
  BANTUAN_RAWAT_INAP
}

"""
KELAS: Kelas sesuai Jenjab I=Rp.1.250.000 II=Rp.1.000.000  III= Rp.750.000 
"""
enum Class {
  I
  II
  III
}

type ProgramMinAggregate {
  id: Int
  plan: ApplicationType
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  allowanceCeiling: Float
  class: Class
  maxAllowance: Float
}

type ProgramSumAggregate {
  id: Int
  allowanceCeiling: Float
  maxAllowance: Float
}

type Program {
  id: Int!

  """
  Nama Program
  Plan	PlanType = jenis Rawat inap atau disingkat RI
  """
  plan: ApplicationType!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime

  """Plafon Santunan:	Plafon Santnan Harian Rawat Inap"""
  allowanceCeiling: Float!

  """
  KELAS: Kelas sesuai Jenjab I=Rp.1.250.000 II=Rp.1.000.000  III= Rp.750.000 
  """
  class: Class!

  """Maksimal biaya perawatan """
  maxAllowance: Float!
  programParticipations: [ProgramParticipation!]
  claimType: [ClaimType!]
  _count: ProgramCount!
}

type ProgramParticipationAvgAggregate {
  id: Float
  fundingId: Float
  programId: Float
}

type ProgramParticipationCountAggregate {
  id: Int!
  bpjsNumber: Int!
  nonActiveReason: Int!
  effectiveDate: Int!
  nonActiveDate: Int!
  participantId: Int!
  fundingId: Int!
  programId: Int!
  _all: Int!
}

type ProgramParticipationMaxAggregate {
  id: Int
  bpjsNumber: String
  nonActiveReason: String
  effectiveDate: DateTime
  nonActiveDate: DateTime
  participantId: String
  fundingId: Int
  programId: Int
}

type ProgramParticipationMinAggregate {
  id: Int
  bpjsNumber: String
  nonActiveReason: String
  effectiveDate: DateTime
  nonActiveDate: DateTime
  participantId: String
  fundingId: Int
  programId: Int
}

type ProgramParticipationSumAggregate {
  id: Int
  fundingId: Int
  programId: Int
}

type ProgramParticipation {
  """Nopol:	Nomer Polish"""
  id: Int!

  """No.BPJS/ASKES: Nomer kartu BPJS"""
  bpjsNumber: String

  """Keterangan Non Aktif:	keterangan perihal penonaktifan"""
  nonActiveReason: String

  """Tgl. Efektif: Tanggal mulai ikut program Fasilitas Kesehatan"""
  effectiveDate: DateTime!

  """Tgl Non Aktif:	tanggal penonaktifan peserta"""
  nonActiveDate: DateTime
  participantId: String!

  """Nomor Dana"""
  fundingId: Int!
  programId: Int
  participant: Participant!

  """Dana"""
  funding: Account!
  Program: Program
}

type RegionAvgAggregate {
  id: Float
}

type RegionCountAggregate {
  id: Int!
  name: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type RegionCount {
  employment: Int!
}

type RegionMaxAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type RegionMinAggregate {
  id: Int
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type RegionSumAggregate {
  id: Int
}

type Region {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  employment: [Employment!]
  _count: RegionCount!
}

type RoleAvgAggregate {
  id: Float
  order: Float
  higherLevelThanId: Float
}

type RoleCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  order: Int!
  higherLevelThanId: Int!
  _all: Int!
}

type RoleCount {
  rolePermissions: Int!
  users: Int!
  lowerLevelThan: Int!
}

type RoleMaxAggregate {
  id: Int
  name: String
  description: String
  order: Int
  higherLevelThanId: Int
}

type RoleMinAggregate {
  id: Int
  name: String
  description: String
  order: Int
  higherLevelThanId: Int
}

type RoleSumAggregate {
  id: Int
  order: Int
  higherLevelThanId: Int
}

type Role {
  id: Int!

  """E.g., 'superuser', 'analyst', 'group leader'"""
  name: String!
  description: String
  order: Int!
  higherLevelThanId: Int
  higherLevelThan: Role
  rolePermissions: [RolePermission!]
  users: [User!]
  lowerLevelThan: [Role!]
  _count: RoleCount!
}

type RolePermissionAvgAggregate {
  roleId: Float
}

type RolePermissionCountAggregate {
  roleId: Int!
  permission: Int!
  _all: Int!
}

type RolePermissionMaxAggregate {
  roleId: Int
  permission: Permission
}

enum Permission {
  CREATE_CLAIM
  UPDATE_CLAIM
  UPDATE_CLAIM_STATUS
  UPDATE_STATUS_FINANCIAL
  RELEASE_CLAIM
  DELETE_CLAIM_DOCUMENT
  CREATE_CLAIM_DOCUMENT
  IMPORT_CLAIM
  EXPORT_CLAIM
  CREATE_PARTICIPANT
  UPDATE_PARTICIPANT
  IMPORT_PARTICIPANT
  EXPORT_PARTICIPANT
}

type RolePermissionMinAggregate {
  roleId: Int
  permission: Permission
}

type RolePermissionSumAggregate {
  roleId: Int
}

type RolePermission {
  roleId: Int!
  permission: Permission!
  role: Role!
}

type TagAvgAggregate {
  id: Float
}

type TagCountAggregate {
  id: Int!
  name: Int!
  color: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type TagCount {
  Claims: Int!
}

type TagMaxAggregate {
  id: Int
  name: String
  color: Color
  createdAt: DateTime
  updatedAt: DateTime
}

enum Color {
  WHITE
  BLUE
  RED
  YELLOW
  GREEN
}

type TagMinAggregate {
  id: Int
  name: String
  color: Color
  createdAt: DateTime
  updatedAt: DateTime
}

type TagSumAggregate {
  id: Int
}

type Tag {
  id: Int!
  name: String!
  color: Color!
  createdAt: DateTime!
  updatedAt: DateTime!
  Claims: [Claim!]
  _count: TagCount!
}

type TransactionAvgAggregate {
  id: Float
  amount: Float
  accountId: Float
}

type TransactionCountAggregate {
  id: Int!
  amount: Int!
  transactionType: Int!
  description: Int!
  createdAt: Int!
  accountId: Int!
  _all: Int!
}

type TransactionMaxAggregate {
  id: Int
  amount: Float
  transactionType: TransactionType
  description: String
  createdAt: DateTime
  accountId: Int
}

enum TransactionType {
  CREDIT
  DEBIT
}

type TransactionMinAggregate {
  id: Int
  amount: Float
  transactionType: TransactionType
  description: String
  createdAt: DateTime
  accountId: Int
}

type TransactionSumAggregate {
  id: Int
  amount: Float
  accountId: Int
}

type Transaction {
  id: Int!
  amount: Float!
  transactionType: TransactionType!
  description: String
  createdAt: DateTime!
  accountId: Int!
  account: Account!
}

type UserAvgAggregate {
  roleId: Float
  participantId: Float
}

type UserCountAggregate {
  id: Int!
  fullName: Int!
  email: Int!
  emailVerifiedAt: Int!
  password: Int!
  profilePictureUrl: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  roleId: Int!
  participantId: Int!
  _all: Int!
}

type UserCount {
  claimsInput: Int!
  claimActions: Int!
  announcementCreated: Int!
  notification: Int!
}

type UserMaxAggregate {
  id: String
  fullName: String
  email: String
  emailVerifiedAt: DateTime
  password: String
  profilePictureUrl: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  roleId: Int
  participantId: Int
}

type UserMinAggregate {
  id: String
  fullName: String
  email: String
  emailVerifiedAt: DateTime
  password: String
  profilePictureUrl: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  roleId: Int
  participantId: Int
}

type UserSumAggregate {
  roleId: Int
  participantId: Int
}

type User {
  id: String!

  """Nama Lengkap"""
  fullName: String!
  email: String!
  emailVerifiedAt: DateTime
  password: String!
  profilePictureUrl: String

  """Tgl.Masuk Peserta"""
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  roleId: Int!
  participantId: Int
  role: Role!
  participant: Participant
  claimsInput: [Claim!]
  claimActions: [ClaimStatus!]
  announcementCreated: [Announcement!]
  notification: [Notification!]
  _count: UserCount!
}

type ClaimCountQuantityByCustomRangeAndPeriodQuery {
  period: String
  quantityClaims: Int
}

type ClaimCountQuantityByStatusQuery {
  status: ClaimStatusType!
  total: Int!
}

type ClaimCountTotalByCustomRangeAndPeriodQuery {
  period: String
  totalClaims: Float
}

type ClaimCountTotalPercentageVsCustomPeriodQuery {
  versus: String!
  percentage: Float!
  amount: Float!
}

type Query {
  """Deskripsinya ada disini loh"""
  claimCountQuantityByCustomRangeAndPeriod(claimCountQuantityByCustomRangeAndPeriodArgs: ClaimCountQuantityByCustomRangeAndPeriodArgs!): [ClaimCountQuantityByCustomRangeAndPeriodQuery!]

  """Deskripsinya ada disini loh"""
  claimCountTotalPercentageVsCustomPeriod(claimCountTotalPercentageVsCustomPeriodArgs: ClaimCountTotalPercentageVsCustomPeriodArgs!): ClaimCountTotalPercentageVsCustomPeriodQuery

  """Deskripsinya ada disini loh"""
  claimCountTotalByCustomRangeAndPeriod(claimCountTotalByCustomRangeAndPeriodArgs: ClaimCountTotalByCustomRangeAndPeriodArgs!): [ClaimCountTotalByCustomRangeAndPeriodQuery!]

  """Deskripsinya ada disini loh"""
  claimCountQuantityByStatus: [ClaimCountQuantityByStatusQuery!]

  """Deskripsinya ada disini loh"""
  claimFindMany: [Claim!]

  """Deskripsinya ada disini loh"""
  notificationFindMany: [Notification!]
}

input ClaimCountQuantityByCustomRangeAndPeriodArgs {
  start: DateTime!
  end: DateTime!
  period: Period!
}

"""Period options for data retrieval"""
enum Period {
  WEEKLY
  MONTHLY
  YEARLY
  ALLTIME
}

input ClaimCountTotalPercentageVsCustomPeriodArgs {
  period: Period!
}

input ClaimCountTotalByCustomRangeAndPeriodArgs {
  start: DateTime!
  end: DateTime!
  period: Period!
}

type Mutation {
  """Deskripsinya ada disini loh"""
  notificationUpdateOne(notificationUpdateOneIsReadAndIsClearedArgs: NotificationUpdateOneIsReadAndIsClearedArgs!): Notification

  """Deskripsinya ada disini loh"""
  notificationUpdateMany: Boolean
}

input NotificationUpdateOneIsReadAndIsClearedArgs {
  id: Int!
  isRead: Boolean
  isCleared: Boolean
}